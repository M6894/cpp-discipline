// TIP:
// Нахождение всех корней квадратных уравнений, а если a == 0, 
// то корней линейного уравнения bx + c = 0 

#include <iostream>
#include <string>
#include <cmath>

using namespace std;

int main() {
    double a, b, c;
    cin >> a >> b >> c;
    string pause;
    double disc = b*b - 4*a*c;
    // cout << "Disc = " << disc << endl;
    
    // Проверка на квадратное / линейное уравнение
    if (a != 0) {
        if (disc > 0) {
            // cout << sqrt(disc) << endl;
            cout << (-1 * b + sqrt(disc)) / (2 * a) << endl;
            cout << (-1 * b - sqrt(disc)) / (2 * a) << endl;
        }

        if (disc == 0) {
            cout << (-1 * b + sqrt(disc))/ (2 * a) << endl;
            // cout << -((b) / (2 * a)) << endl;
        }
    } else {
        if (!((b == 0 && c == 0) || (b == 0 && c != 0))) {
            cout << -(c/b) << endl;
        }
    }
    
    
    cin >> pause;
    return 0;
}

/* MIPT and Yandex implementation:
int main() {
    double A, B, C;
    cin >> A >> B >> C;

    // найдём дискриминант
    double D = B * B - 4 * A * C;

    // если A равно нулю, то уравнение линейное: Bx + C = 0
    if (A == 0) {
    
        // Bx = -C => x = -C / B
        if (B != 0) {
            cout << -C / B << endl;
        }
        // если B равно нулю, корней нет
    
    } else if (D == 0) {  // случай с нулевым дискриминантом
    
        // корень ровно один
        cout << -B / (2 * A) << endl;
    
    } else if (D > 0) {  // в случае с положительным дискриминантом корня два
  
        double r1 = (-B + sqrt(D)) / (2 * A);
        double r2 = (-B - sqrt(D)) / (2 * A);

        cout << r1 << " " << r2 << endl;
    
    }
    // если дискриминант отрицателен, действительных корней нет

    return 0;
}
*/


/* Task
На вход вашей программы в стандартном потоке ввода подаются действительные коэффициенты 
A, B и C уравнения Ax² + Bx + C = 0. Выведите все его различные действительные корни в 
поток вывода в любом порядке, при этом разделяя корни пробелами. Гарантируется, что хотя 
бы один из коэффициентов уравнения не равен нулю.

Пример
stdin	stdout
2 5 2	-0.5 -2
2 4 2	-1
2 1 2	
0 4 10	-2.5

Подсказка
Для вычисления квадратного корня используйте функцию sqrt из библиотеки cmath. Чтобы подключить 
библиотеку, в начале программы напишите
#include <cmath>
*/